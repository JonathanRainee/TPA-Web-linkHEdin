type Experience {
    ID: ID!
	UserID: ID!
	Title: String!
	EmploymentType: String! 
	CompanyName: String! 
	Location: String! 
	Active: Boolean!
	StartYear: String! 
	EndYear: String! 
	Industry: String! 
	Description: String! 
}

input newExperience {
    UserID: ID!
	Title: String!
	EmploymentType: String! 
	CompanyName: String! 
	Location: String! 
	Active: Boolean!
	StartYear: String! 
	EndYear: String! 
	Industry: String! 
	Description: String! 
}

extend type Query {
    userExperience(UserID: ID!): [Experience!]!
}

extend type Mutation {
    createExperience(input: newExperience!): Experience!
    updateExperience(id: ID!, input: newExperience!): Experience!
    deleteExperience(id: ID!): Experience!
}